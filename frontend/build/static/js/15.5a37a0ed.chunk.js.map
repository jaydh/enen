{"version":3,"sources":["components/Graph.tsx"],"names":["VictoryLegend","require","Graph","_this$props","this","props","domains","completionDates","data","Object","keys","map","key","domain","count","today","Date","runner","dates","isSameDay","subWeeks","toDateString","subDays","inRange","filter","t","isWithinRange","forEach","console","log","react__WEBPACK_IMPORTED_MODULE_6__","theme","VictoryTheme","material","x","y","title","centerTitle","orientation","style","border","stroke","fontSize","victory__WEBPACK_IMPORTED_MODULE_9__","animate","duration","easing","padding","left","top","right","bottom","victory__WEBPACK_IMPORTED_MODULE_10__","dependentAxis","tickValues","victory__WEBPACK_IMPORTED_MODULE_11__","labels","d","horizontal","fillOpacity","strokeWidth","isSunday","parse","tickLabels","angle","React","connect","state","articles","completedOn","graphData"],"mappings":"2MAeQA,EAAkBC,EAAQ,KAA1BD,cAOFE,mLASF,IARc,IAAAC,EACuBC,KAAKC,MAAlCC,EADMH,EACNG,QAASC,EADHJ,EACGI,gBACXC,EAAOC,OAAOC,KAAKJ,GAASK,IAAI,SAACC,GACrC,MAAO,CAAEC,OAAQD,EAAKE,MAAOR,EAAQM,MAEjCG,EAAQ,IAAIC,KACdC,EAAS,IAAID,KACXE,EAAQ,IACNC,oBAAUF,EAAQG,mBAASL,EAAO,KACxCG,EAAMD,EAAOI,gBAAkB,EAC/BJ,EAASK,kBAAQL,EAAQ,GAG3B,IAAMM,EAAUhB,EACbiB,OAAO,SAACC,GAAD,OAAaC,wBAAcD,EAAGL,mBAASL,EAAO,GAAIA,KACzDY,QAAQ,SAACF,GACRP,EAAMO,EAAEJ,gBAAkBH,EAAMO,EAAEJ,gBAAkB,IAIxD,OAFAO,QAAQC,IAAIN,EAASL,GAGnBY,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC9B,EAAD,CACE+B,MAAOC,IAAaC,SACpBC,EAAG,IACHC,EAAG,GACHC,MAAM,2BACNC,aAAa,EACbC,YAAY,aACZC,MAAO,CAAEC,OAAQ,CAAEC,OAAQ,SAAWL,MAAO,CAAEM,SAAU,KACzDlC,KAAM,KAERsB,EAAA,cAACa,EAAA,EAAD,CACEC,QAAS,CAAEC,SAAU,IAAKC,OAAQ,UAClCf,MAAOC,IAAaC,SACpBc,QAAS,CAAEC,KAAM,IAAKC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,KAElDrB,EAAA,cAACsB,EAAA,EAAD,CAAaC,eAAe,EAAMC,WAAY7C,OAAOC,KAAKJ,KAC1DwB,EAAA,cAACyB,EAAA,EAAD,CACEC,OAAQ,SAACC,GAAD,OAAYA,EAAE3C,OACtB4C,YAAY,EACZlD,KAAMA,EACN2B,EAAE,QACFD,EAAE,SACFK,MAAO,CACL/B,KAAM,CACJmD,YAAa,GACbC,YAAa,GAEfJ,OAAQ,CACNd,SAAU,QAKlBZ,EAAA,cAACa,EAAA,EAAD,CACEC,QAAS,CAAEC,SAAU,IAAKC,OAAQ,UAClCf,MAAOC,IAAaC,SACpBc,QAAS,CAAEC,KAAM,IAAKC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,KAElDrB,EAAA,cAACsB,EAAA,EAAD,CACEC,eAAe,EACfC,WAAY7C,OAAOC,KAAKQ,GAAOM,OAAO,SAACC,GAAD,OACpCoC,mBAASC,gBAAMrC,MAEjBc,MAAO,CACLwB,WAAY,CAAErB,SAAU,GAAIK,QAAS,GAAIiB,MAAO,OAGpDlC,EAAA,cAACyB,EAAA,EAAD,CACE/C,KAAMC,OAAOC,KAAKQ,GAAOP,IAAI,SAACc,GAAD,OAAeP,EAAMO,KAClDc,MAAO,CACL/B,KAAM,CACJmD,YAAa,GACbC,YAAa,GAEfJ,OAAQ,CACNd,SAAU,gBA9ENuB,aAiGLC,sBATS,SAACC,GACvB,MAAO,CACL5D,gBAAiB4D,EAAMC,SAASA,SAASzD,IAAI,SAACc,GAAD,OAC3CqC,gBAAMrC,EAAE4C,eAEV/D,QAAS6D,EAAMG,UAAUhE,UAId4D,CAAyBhE","file":"static/js/15.5a37a0ed.chunk.js","sourcesContent":["import {\n  isSameDay,\n  isSunday,\n  isWithinRange,\n  parse,\n  subDays,\n  subWeeks\n} from 'date-fns';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { VictoryAxis, VictoryBar, VictoryChart, VictoryTheme } from 'victory';\n\n// tslint:disable:jsx-no-lambda\n// tslint:disable:no-var-requires\n// Broken typedef for legend\nconst { VictoryLegend } = require('victory');\n\ninterface IProps {\n  completionDates: any;\n  domains: {};\n}\n\nclass Graph extends React.Component<IProps> {\n  public render() {\n    const { domains, completionDates } = this.props;\n    const data = Object.keys(domains).map((key: string) => {\n      return { domain: key, count: domains[key] as any };\n    });\n    const today = new Date();\n    let runner = new Date();\n    const dates = {};\n    while (!isSameDay(runner, subWeeks(today, 4))) {\n      dates[runner.toDateString()] = 0;\n      runner = subDays(runner, 1);\n    }\n    // tslint:disable:no-console\n    const inRange = completionDates\n      .filter((t: Date) => isWithinRange(t, subWeeks(today, 4), today))\n      .forEach((t: Date) => {\n        dates[t.toDateString()] = dates[t.toDateString()] + 1;\n      });\n    console.log(inRange, dates);\n\n    return (\n      <>\n        <VictoryLegend\n          theme={VictoryTheme.material}\n          x={125}\n          y={10}\n          title=\"Publication Distribution\"\n          centerTitle={true}\n          orientation=\"horizontal\"\n          style={{ border: { stroke: 'black' }, title: { fontSize: 20 } }}\n          data={[]}\n        />\n        <VictoryChart\n          animate={{ duration: 500, easing: 'bounce' }}\n          theme={VictoryTheme.material}\n          padding={{ left: 200, top: 50, right: 10, bottom: 50 }}\n        >\n          <VictoryAxis dependentAxis={true} tickValues={Object.keys(domains)} />\n          <VictoryBar\n            labels={(d: any) => d.count}\n            horizontal={true}\n            data={data}\n            y=\"count\"\n            x=\"domain\"\n            style={{\n              data: {\n                fillOpacity: 0.7,\n                strokeWidth: 3\n              },\n              labels: {\n                fontSize: 15\n              }\n            }}\n          />\n        </VictoryChart>\n        <VictoryChart\n          animate={{ duration: 500, easing: 'bounce' }}\n          theme={VictoryTheme.material}\n          padding={{ left: 200, top: 50, right: 10, bottom: 50 }}\n        >\n          <VictoryAxis\n            dependentAxis={false}\n            tickValues={Object.keys(dates).filter((t: string) =>\n              isSunday(parse(t))\n            )}\n            style={{\n              tickLabels: { fontSize: 20, padding: 30, angle: 45 } as any\n            }}\n          />\n          <VictoryBar\n            data={Object.keys(dates).map((t: string) => dates[t])}\n            style={{\n              data: {\n                fillOpacity: 0.7,\n                strokeWidth: 3\n              },\n              labels: {\n                fontSize: 15\n              }\n            }}\n          />\n        </VictoryChart>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    completionDates: state.articles.articles.map((t: any) =>\n      parse(t.completedOn)\n    ),\n    domains: state.graphData.domains\n  };\n};\n\nexport default connect(mapStateToProps)(Graph);\n"],"sourceRoot":""}